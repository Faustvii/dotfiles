#!/bin/bash
set -e

default_sink=$(pactl info | grep "Default Sink:" | cut '-d ' -f3)
sinks=$(pactl list short sinks | cut -f2 | grep -v 'easyeffects')

# for wrap-around
sinks="$sinks
$sinks"

next_sink=$(echo "$sinks" | awk "/$default_sink/{getline x;print x;exit;}")

function get_device_name() {
    device_name=$(pactl list sinks | awk -v device="$next_sink" '
    # Process each "Sink" block
    $1 == "Sink" {sink = $2}
    
    # Skip the easyeffects_sink (add check here before anything else)
    sink == "easyeffects_sink" {next}
    
    # When matching node.name, and it is the required device, flag it
    $1 == "node.name" && $3 == "\"" device "\"" {found = 1}
    
    # When device.description is found and we already matched the correct node.name, print description
    found && $1 == "device.description" {
        gsub(/"/, "", $0)
        print substr($0, index($0, "=")+2)
        exit
    }
    ')
}

function show_active_device() {
    get_device_name
    dunstify -t 1000 -r 46001 -u normal "$device_name"
}

pactl set-default-sink "$next_sink"
pactl list short sink-inputs |
    cut -f1 |
    xargs -I{} pactl move-sink-input {} "$next_sink"

show_active_device
